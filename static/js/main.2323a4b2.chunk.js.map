{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","console","log","target","rows","placeholder","newtext","showAlert","navigator","clipboard","writeText","split","length","App","setMode","setAlert","message","setTimeout","document","body","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2323a4b2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n      props.alert &&\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = { title: PropTypes.string, aboutText: PropTypes.string };","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        console.log(\"Convert Upper case button is clicked : \"+text);\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to Upper Case!\",\"success\");\r\n    }\r\n    const handleLowClick = () => {\r\n        console.log(\"Convert Lower case button is clicked : \"+text);\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to Lower Case!\",\"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        let newtext = '';\r\n        setText(newtext);\r\n        props.showAlert(\"Text has been cleared!\",\"success\");\r\n    }\r\n    const handleOnchange = (event) => {\r\n        console.log(\"Onchange event\");\r\n        setText(event.target.value); \r\n    }\r\n    const handleCopy = (event) => {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied to clipboard!\",\"success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n    // text = \"newtext\"; // wrong way to change state\r\n    // setText(\"newtext\"); // Correct way to change state\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"mb-3\">\r\n                <h1>{props.heading}</h1>\r\n                <label htmlFor=\"textBox\" className=\"form-label\">Example textarea</label>\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnchange} id=\"textBox\" rows=\"3\" placeholder={text}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-sm btn-primary mx-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-sm btn-warning mx-1\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-sm btn-danger mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-sm btn-info mx-1\" onClick={handleCopy}>Copy to Clipboard</button>\r\n            <h2>Your Text Summary:</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters.</p>\r\n            <p>{ 0.008* text.split(\" \").length} Minuits reading time.</p>\r\n            <h2>Preview:</h2>\r\n            <p>{text.length>0?text:'Enter Text in above box to preview it here'}</p>\r\n        </div>\r\n    )\r\n}","import {useState} from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=> {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(()=>{\n      setAlert(null);\n    },3000);\n  }\n  const toggleMode = ()=>{\n    if(mode ==='light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      document.body.style.color = 'white';\n      document.title = 'TextUtils - Dark';\n      showAlert(\"Dark Mode has been enabled\",\"success\");\n    }\n    else\n    {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      document.title = 'TextUtils - Light';\n      showAlert(\"Light Mode has been enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert} />\n      \n      {/* <Switch> */}\n        {/* <Route path=\"/about\"> */}\n          {/* <About /> */}\n        {/* </Route> */}\n        {/* <Route path=\"/\"> */}\n      <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" />\n        {/* </Route> */}\n      {/* </Switch> */}\n    {/* </Router> */}\n    </>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}